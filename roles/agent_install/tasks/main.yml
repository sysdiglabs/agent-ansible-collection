---
- name: Set facts
  ansible.builtin.set_fact:
    agent_install_version: "{{ configuration | sysdig.agent.toAgentVersion }}"
    agent_install_driver_type: "{{ configuration | sysdig.agent.toAgentDriverType | lower }}"
    agent_install_probe_build_dependencies: "{{ configuration | sysdig.agent.toAgentInstallProbeBuildDependencies | bool }}"
    agent_install_deb_repository_url: "{{ configuration | sysdig.agent.toDebUrl | default('https://download.sysdig.com/stable/deb', true) }}"
    agent_install_deb_repository_gpgkey: "{{ configuration | sysdig.agent.toDebGpgKey | default('https://download.sysdig.com/DRAIOS-GPG-KEY.public', true) }}"
    agent_install_rpm_repository_url: "{{ configuration | sysdig.agent.toRpmUrl | default('https://download.sysdig.com/stable/rpm/$basearch', true) }}"
    agent_install_rpm_repository_gpgkey: "{{ configuration | sysdig.agent.toRpmGpgKey | default('https://download.sysdig.com/DRAIOS-GPG-KEY.public', true) }}"
    agent_install_local_forwarder_enabled: "{{ configuration | sysdig.agent.toLocalForwarderEnabled | bool }}"

- name: Install Sysdig Agent
  block:
    - name: Validate Environment
      ansible.builtin.include_tasks: agent/validations/platforms.yml

    - name: Install Dependencies
      ansible.builtin.include_tasks: agent/dependencies/{{ ansible_distribution | lower }}/install-{{ ansible_distribution | lower }}-dependencies.yml
      when: agent_install_probe_build_dependencies

    - name: Configure Sysdig Agent Repository
      ansible.builtin.include_tasks: "agent/configure-{{ 'rpm' if ansible_pkg_mgr in ['dnf', 'yum'] else 'deb' }}-repository.yml"

    - name: Install Sysdig Agent (latest)
      ansible.builtin.package:
        name: draios-agent
        state: latest
      when: (not agent_install_version) or
            (agent_install_version and (agent_install_version == 'latest' or agent_install_version == ""))

    - name: Install Sysdig Agent (pinned)
      ansible.builtin.package:
        name: "draios-agent{% if agent_install_version != 'latest' %}{% if ansible_pkg_mgr == 'apt' %}={% else %}-{% endif %}{{ agent_install_version }}{% endif %}"
        state: present
      when:
        - agent_install_version
        - agent_install_version != 'latest'

    - name: Create dragent.yaml file
      ansible.builtin.template:
        src: dragent.yaml.j2
        dest: "/opt/draios/etc/dragent.yaml"
        owner: root
        group: root
        mode: 0644

    - name: Create local_forwarder_config.yaml file
      ansible.builtin.template:
        src: local_forwarder_config.yaml.j2
        dest: "/opt/draios/etc/local_forwarder_config.yaml"
        owner: root
        group: root
        mode: 0644
      when: agent_install_local_forwarder_enabled

    - name: Enable Universal / Legacy eBPF
      when: agent_install_driver_type == "universal_ebpf" or agent_install_driver_type == "legacy_ebpf"
      block:
        - name: (eBPF) Enable Universal / Legacy eBPF driver
          ansible.builtin.template:
            src: dragent_ebpf_env_file.j2
            dest: "/etc/{% if ansible_pkg_mgr == 'apt' %}default{% else %}sysconfig{% endif %}/dragent"
            owner: root
            group: root
            mode: 0o644

        - name: (eBPF) Determine if sysdigcloud_probe module is loaded
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              lsmod | grep -q sysdigcloud_probe && echo -n LOADED || echo -n NOT_LOADED
            executable: bash
          register: agent_install_probe_loaded
          changed_when: agent_install_probe_loaded.stdout == 'LOADED'

        - name: (eBPF) Stop dragent Service to unload kernel module
          ansible.builtin.service:
            name: dragent
            state: stopped
          when: agent_install_probe_loaded.stdout == 'LOADED'

        - name: (eBPF) Determine if sysdigcloud_probe module is still loaded after stop
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              lsmod | grep -q sysdigcloud_probe && echo -n LOADED || echo -n NOT_LOADED
            executable: bash
          register: agent_install_probe_loaded_after_stop
          changed_when: agent_install_probe_loaded_after_stop.stdout == 'LOADED'

        - name: (eBPF) Ensure kernel module is not loaded
          ansible.builtin.shell:
            cmd: |
              modprobe -r sysdigcloud_probe || rmmod sysdigcloud_probe
            executable: bash
          register: agent_install_probe_removed
          when: agent_install_probe_loaded_after_stop.stdout == 'LOADED'
          changed_when: agent_install_probe_removed.rc == 0

    - name: (kmod) Disable eBPF
      ansible.builtin.file:
        path: "/etc/{% if ansible_pkg_mgr == 'apt' %}default{% else %}sysconfig{% endif %}/dragent"
        state: absent
      when: agent_install_driver_type == "kmod"

    - name: Start dragent Service
      block:
        - name: Start dragent Service
          ansible.builtin.service:
            name: dragent
            enabled: true
            state: started
      rescue:
        - name: Attempting to Start dragent Service with sysvinit
          ansible.builtin.sysvinit:
            name: dragent
            enabled: true
            state: started
